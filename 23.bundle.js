(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{315:function(a,e,n){"use strict";n.r(e),e.default='<h2 id="description">Description<a href="#description" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>This package contains all webpack-cli related yeoman generators. </p>\n<h2 id="installation">Installation<a href="#installation" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D webpack-cli @webpack-cli/generators</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To run the package programmatically, install it as a dependency. When using the package programmatically, one does not have to install webpack-cli.</p>\n<h3 id="node">Node<a href="#node" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> addGenerator<span class="token punctuation">,</span> addonGenerator<span class="token punctuation">,</span> initGenerator<span class="token punctuation">,</span> loaderGenerator<span class="token punctuation">,</span> \n        pluginGenerator<span class="token punctuation">,</span> removeGenerator<span class="token punctuation">,</span> updateGenerator \n    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@webpack-cli/generators"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// ... compose with yeoman env or add a generator to your own yeoman project</span></code></pre>\n<h2 id="generators">Generators<a href="#generators" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/plugin-generator.ts"><strong>Plugin Generator</strong></a> : Creates a webpack plugin project, add starter plugin code and runs <code>webpack-defaults</code></li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/remove-generator.ts"><strong>Remove Generator</strong></a> : Removes properties from webpack configurations</li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/update-generator.ts"><strong>Update Generator</strong></a> : [WIP] Updates properties of webpack configurations</li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/loader-generator.ts"><strong>Loader Generator</strong></a> : Creates a webpack loader project, add starter loader code and runs <code>webpack-defaults</code></li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/init-generator.ts"><strong>Init Generator</strong></a>   : Generates new webapck configuration as per user requirements</li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/add-generator.ts"><strong>Add Generator</strong></a>    : Add properties to webpack configurations</li>\n<li><a href="https://github.com/webpack/webpack-cli/blob/master/packages/generators/addon-generator.ts"><strong>Addon Generator</strong></a>  : Generates a webpack project conforming to <code>webpack-defaults</code></li>\n</ul>\n<hr>\n<p><a href="https://github.com/webpack/webpack-cli/tree/master/packages">Back to Packages</a></p>\n'}}]);