(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{326:function(n,a,s){"use strict";s.r(a),a.default='<p>This is the utility suite for creating a webpack <code>scaffold</code>, it contains utility functions to help you work with <a href="https://github.com/SBoudrias/Inquirer.js/">Inquirer</a> prompting and scaffolding.</p>\n<h1 id="installation">Installation<a href="#installation" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D webpack-cli @webpack-cli/webpack-scaffold</code></pre>\n<h1 id="api">API<a href="#api" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<ol>\n<li><a href="#parsevalue">parseValue()</a></li>\n<li><a href="#createarrowfunction">createArrowFunction()</a></li>\n<li><a href="#createregularfunction">createRegularFunction()</a></li>\n<li><a href="#createdynamicpromise">createDynamicPromise()</a></li>\n<li><a href="#createassetfilterfunction">createAssetFilterFunction()</a></li>\n<li><a href="#createexternalfunction">createExternalFunction()</a></li>\n<li><a href="#createrequire">createRequire()</a></li>\n<li>Inquirer: <a href="#list">List</a>, <a href="#rawlist">RawList</a>, <a href="#checklist">CheckList</a>, <a href="#input">Input</a>, <a href="#inputvalidate">InputValidate</a>, <a href="#confirm">Confirm</a></li>\n</ol>\n<h2 id="parsevalue">parseValue<a href="#parsevalue" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Used when you cannot use regular conventions. Handy for examples like <code>RegExp</code> or <code>output.sourcePrefix</code></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> parseValue <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parseValue<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>output<span class="token punctuation">.</span>sourcePrefix <span class="token operator">=</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token string">\'\\t\'</span><span class="token punctuation">)</span>\n<span class="token comment">// sourcePrefix: \'\\t\'</span></code></pre>\n<h2 id="createarrowfunction">createArrowFunction<a href="#createarrowfunction" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Generally used when dealing with an entry point as an arrow function</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createArrowFunction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createArrowFunction<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token function">createArrowFunction</span><span class="token punctuation">(</span><span class="token string">\'app.js\'</span><span class="token punctuation">)</span>\n<span class="token comment">// entry: () => \'app.js\'</span></code></pre>\n<h2 id="createregularfunction">createRegularFunction<a href="#createregularfunction" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Used when creating a function that returns a single value</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createRegularFunction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createRegularFunction<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token function">createRegularFunction</span><span class="token punctuation">(</span><span class="token string">\'app.js\'</span><span class="token punctuation">)</span>\n<span class="token comment">// entry: function() { return \'app.js\' }</span></code></pre>\n<h2 id="createdynamicpromise">createDynamicPromise<a href="#createdynamicpromise" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>Array</code> | <code>String</code></p>\n<p>Used to create a dynamic entry point</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createDynamicPromise <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createDynamicPromise<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>confguration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token function">createDynamicPromise</span><span class="token punctuation">(</span><span class="token string">\'app.js\'</span><span class="token punctuation">)</span>\n<span class="token comment">// entry: () => new Promise((resolve) => resolve(\'app.js\'))</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token function">createDynamicPromise</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'app.js\'</span><span class="token punctuation">,</span> <span class="token string">\'index.js\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// entry: () => new Promise((resolve) => resolve([\'app.js\',\'index.js\']))</span></code></pre>\n<h2 id="createassetfilterfunction">createAssetFilterFunction<a href="#createassetfilterfunction" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Used to create an <a href="https://webpack.js.org/configuration/performance/#performance-assetfilter">assetFilterFunction</a></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createAssetFilterFunction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createAssetFilterFunction<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>performance<span class="token punctuation">.</span>assetFilter <span class="token operator">=</span> <span class="token function">createAssetFilterFunction</span><span class="token punctuation">(</span><span class="token string">\'js\'</span><span class="token punctuation">)</span>\n<span class="token comment">// assetFilter: function (assetFilename) { return assetFilename.endsWith(\'.js\'); }</span></code></pre>\n<h2 id="createexternalfunction">createExternalFunction<a href="#createexternalfunction" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Used to create an <a href="https://webpack.js.org/configuration/externals/#function">general function from Externals</a></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createExternalFunction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createExternalFunction<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>webpackOptions<span class="token punctuation">.</span>externals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">createExternalFunction</span><span class="token punctuation">(</span><span class="token string">\'^yourregex$\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token comment">/*\nexternals: [\n  function(context, request, callback) {\n    if (/^yourregex$/.test(request)){\n      return callback(null, \'commonjs \' + request);\n    }\n    callback();\n  }\n*/</span></code></pre>\n<h2 id="createrequire">createRequire<a href="#createrequire" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Param: <code>String</code></p>\n<p>Used to create a module in <code>topScope</code></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> createRequire <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>createRequire<span class="token punctuation">;</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>myScaffold<span class="token punctuation">.</span>topScope <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">createRequire</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token comment">// const webpack = require(\'webpack\')</span></code></pre>\n<h2 id="inquirer"><a href="https://github.com/SBoudrias/Inquirer.js/#prompt-types">Inquirer</a><a href="#inquirer" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="list">List<a href="#list" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String>, choices&#x3C;Array></code></p>\n<p>Creates a List from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> List <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>List<span class="token punctuation">;</span>\n\n<span class="token function">List</span><span class="token punctuation">(</span><span class="token string">\'entry\'</span><span class="token punctuation">,</span> <span class="token string">\'what kind of entry do you want?\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'Array\'</span><span class="token punctuation">,</span> <span class="token string">\'Function\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>\n<h3 id="rawlist">RawList<a href="#rawlist" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String>, choices&#x3C;Array></code></p>\n<p>Creates a RawList from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> RawList <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RawList<span class="token punctuation">;</span>\n\n<span class="token function">RawList</span><span class="token punctuation">(</span><span class="token string">\'entry\'</span><span class="token punctuation">,</span> <span class="token string">\'what kind of entry do you want?\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'Array\'</span><span class="token punctuation">,</span> <span class="token string">\'Function\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>\n<h3 id="checklist">CheckList<a href="#checklist" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String>, choices&#x3C;Array></code></p>\n<p>Creates a CheckList(<code>checkbox</code>) from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> CheckList <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CheckList<span class="token punctuation">;</span>\n\n<span class="token function">CheckList</span><span class="token punctuation">(</span><span class="token string">\'entry\'</span><span class="token punctuation">,</span> <span class="token string">\'what kind of entry do you want?\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'Array\'</span><span class="token punctuation">,</span> <span class="token string">\'Function\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>\n<h3 id="input">Input<a href="#input" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String></code></p>\n<p>Creates an Input from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> Input <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Input<span class="token punctuation">;</span>\n\n<span class="token function">Input</span><span class="token punctuation">(</span><span class="token string">\'entry\'</span><span class="token punctuation">,</span> <span class="token string">\'what is your entry point?\'</span><span class="token punctuation">)</span></code></pre>\n<h3 id="inputvalidate">InputValidate<a href="#inputvalidate" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String>, validate&#x3C;Function></code></p>\n<p>Creates an Input from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> InputValidate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>InputValidate<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">validation</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'Wow, that was short!\'</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token function">InputValidate</span><span class="token punctuation">(</span><span class="token string">\'entry\'</span><span class="token punctuation">,</span> <span class="token string">\'what is your entry point?\'</span><span class="token punctuation">,</span> validation<span class="token punctuation">)</span></code></pre>\n<h3 id="confirm">Confirm<a href="#confirm" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Param: <code>name&#x3C;String>, message&#x3C;String>, default&#x3C;?Boolean></code></p>\n<p>Creates an Input from Inquirer</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> Confirm <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@webpack-cli/webpack-scaffold\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Confirm<span class="token punctuation">;</span>\n\n<span class="token function">Confirm</span><span class="token punctuation">(</span><span class="token string">\'contextConfirm\'</span><span class="token punctuation">,</span> <span class="token string">\'Is this your context?\'</span><span class="token punctuation">)</span></code></pre>\n'}}]);