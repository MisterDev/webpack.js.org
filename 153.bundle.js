(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{447:function(e,n,o){"use strict";o.r(n),n.default='<p><a href="https://npmjs.com/package/stylelint-webpack-plugin"><img src="https://img.shields.io/npm/v/stylelint-webpack-plugin.svg" alt="npm"></a>\n<a href="https://nodejs.org"><img src="https://img.shields.io/node/v/stylelint-webpack-plugin.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/stylelint-webpack-plugin"><img src="https://david-dm.org/webpack-contrib/stylelint-webpack-plugin.svg" alt="deps"></a>\n<a href="https://circleci.com/gh/webpack-contrib/stylelint-webpack-plugin"><img src="https://img.shields.io/circleci/project/github/webpack-contrib/stylelint-webpack-plugin.svg" alt="tests"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a></p>\n<p>A Stylelint plugin for webpack</p>\n<h2 id="requirements">Requirements<a href="#requirements" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>This module requires a minimum of Node v6.9.0 and webpack v4.0.0.</p>\n<h2 id="differences-with-stylelint-loader">Differences With stylelint-loader<a href="#differences-with-stylelint-loader" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Both <a href="https://github.com/adrianhall/stylelint-loader"><code>stylelint-loader</code></a> and\nthis module have their uses. <code>stylelint-loader</code> lints the files you <code>require</code>\n(or the ones you define as an <code>entry</code> in your <code>webpack</code> config). However,\n<code>@imports</code> in files are not followed, meaning only the main file for each\n<code>require/entry</code> is linted.</p>\n<p><code>stylelint-webpack-plugin</code> allows defining a\n<a href="https://en.wikipedia.org/wiki/Glob_(programming)">glob pattern</a> matching the\nconfiguration and use of <code>stylelint</code>.</p>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>stylelint-webpack-plugin</code>:</p>\n<pre><code class="hljs language-console">$ npm install stylelint-webpack-plugin --save-dev\n</code></pre>\n<p>Then add the plugin to your <code>webpack</code> config. For example:</p>\n<p><strong>file.ext</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> file <span class="token keyword">from</span> <span class="token string">\'file.ext\'</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token keyword">const</span> StyleLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'stylelint-webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">StyleLintPlugin</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>See stylelint\'s <a href="http://stylelint.io/user-guide/node-api/#options">options</a> for\nthe complete list of options available. These options are passed through to the\n<code>stylelint</code> directly.</p>\n<h3 id="configfile"><code>configFile</code><a href="#configfile" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>undefined</code></p>\n<p>Specify the config file location to be used by <code>stylelint</code>.</p>\n<p><em>Note: By default this is\n<a href="http://stylelint.io/user-guide/configuration/">handled by <code>stylelint</code></a> via\ncosmiconfig.</em></p>\n<h3 id="context"><code>context</code><a href="#context" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>compiler.context</code></p>\n<p>A <code>String</code> indicating the root of your <code>SCSS</code> files.</p>\n<h3 id="emiterrors"><code>emitErrors</code><a href="#emiterrors" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>If true, pipes <code>stylelint</code> error severity messages to the <code>webpack</code> compiler\'s\nerror message handler.</p>\n<p><em>Note: When this property is disabled all <code>stylelint</code> messages are piped to the\n<code>webpack</code> compiler\'s warning message handler.</em></p>\n<h3 id="failonerror"><code>failOnError</code><a href="#failonerror" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>false</code></p>\n<p>If true, throws a fatal error in the global build process. This will end the\nbuild process on any <code>stylelint</code> error.</p>\n<h3 id="files"><code>files</code><a href="#files" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Array[String]</code>\nDefault: <code>\'**/*.s?(a|c)ss\'</code></p>\n<p>Specify the glob pattern for finding files. Must be relative to <code>options.context</code>.</p>\n<h3 id="formatter"><code>formatter</code><a href="#formatter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Object</code>\nDefault: <code>require(\'stylelint\').formatters.string</code></p>\n<p>Specify a custom formatter to format errors printed to the console.</p>\n<h3 id="lintdirtymodulesonly"><code>lintDirtyModulesOnly</code><a href="#lintdirtymodulesonly" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>false</code></p>\n<p>Lint only changed files, skip lint on start.</p>\n<h3 id="syntax"><code>syntax</code><a href="#syntax" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>undefined</code></p>\n<p>See the <code>styelint</code>\n<a href="https://stylelint.io/user-guide/node-api/#syntax">user guide</a> for more info.\ne.g. use <code>\'scss\'</code> to lint .scss files.</p>\n<h2 id="error-reporting">Error Reporting<a href="#error-reporting" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>By default the plugin will dump full reporting of errors. Set <code>failOnError</code> to\ntrue if you want <code>webpack</code> build process breaking with any stylelint error. You\ncan use the <code>quiet</code> option to avoid error output to the console.</p>\n<h2 id="acknowledgement">Acknowledgement<a href="#acknowledgement" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>This project was inspired by, and is a heavily modified version of\n<code>sasslint-webpack-plugin</code>.</p>\n<p>Thanks to Javier (<a href="https://github.com/vieron">@vieron</a>) for authoring this\nplugin.</p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h4 id="mit"><a href="https://github.com/webpack-contrib/stylelint-webpack-plugin/blob/master/LICENSE">MIT</a><a href="#mit" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n'}}]);